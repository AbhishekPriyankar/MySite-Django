name: Build and Deploy  # Name of the workflow for building and deploying the project

on:
  push:
    branches:
      - master  # Triggers the workflow when there is a push to the 'master' branch (adjust if needed)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Specifies the environment (OS) in which the workflow will run

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3  # Uses the official GitHub action to check out the repository code

      # Step 2: Set up Python environment for the workflow
      - name: Set up Python
        uses: actions/setup-python@v3  # Uses the official action to set up Python
        with:
          python-version: '3.x'  # Specifies a Python 3.x version to use

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrades pip to the latest version
          pip install -r requirements.txt  # Installs all required packages from requirements.txt
          pip install setuptools wheel  # Ensures setuptools and wheel are available for building the package

      # Step 4: Build the Python package
      - name: Build package
        run: |
          python setup.py sdist bdist_wheel  # Builds the source distribution and wheel distribution

      # Step 5: Upload the built package to Artifactory
      - name: Upload artifact to Artifactory
        env:
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}  # URL of the Artifactory repository, set as a secret
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}  # Artifactory username, stored as a secret
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}  # Artifactory password/API key, stored as a secret
        run: |
          # Uses curl to upload the wheel file(s) to Artifactory
          curl -u$ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD \
            -T dist/*.whl \  # Selects the built wheel file(s) in the dist directory
            "$ARTIFACTORY_URL/path/to/repository/"  # Path to the target Artifactory repository
